#define CATCH_CONFIG_RUNNER
#include "catch.hpp"
#include "tasks.hpp"
#include <string.h>

TEST_CASE ("reversecomplement1", "[1]") {
    REQUIRE (reverse_complement("GAGGC") == "GCCUC");
}

TEST_CASE ("reversecomplement2", "[2]") {
    REQUIRE (reverse_complement("UCUCG") == "CGAGA");
}
    
TEST_CASE ("reversecomplement3", "[3]") {
    REQUIRE (reverse_complement("CAGGU") == "ACCUG");
}

TEST_CASE ("reversecomplement4", "[4]") {
    REQUIRE (reverse_complement("UAUUUUUCCA") == "UGGAAAAAUA");
}

TEST_CASE ("reversecomplement5", "[5]") {
    REQUIRE (reverse_complement("GUAGGCAACA") == "UGUUGCCUAC");
}

TEST_CASE ("reversecomplement6", "[6]") {
    REQUIRE (reverse_complement("UAGCUAAAUC") == "GAUUUAGCUA");
}

TEST_CASE ("reversecomplement7", "[7]") {
    REQUIRE (reverse_complement("AUGAGCGUAC") == "GUACGCUCAU");
}

TEST_CASE ("reversecomplement8", "[8]") {
    REQUIRE (reverse_complement("UUAUACCCGAGUCGGAUUUGUCACU") == "AGUGACAAAUCCGACUCGGGUAUAA");
}

TEST_CASE ("reversecomplement9", "[9]") {
    REQUIRE (reverse_complement("CUUGUGCGCUAUACAUCGAGUAGUUGCUAGAGUAUGUUACUCAAGAGCGC") == "GCGCUCUUGAGUAACAUACUCUAGCAACUACUCGAUGUAUAGCGCACAAG");
}

TEST_CASE ("reversecomplement10", "[10]") {
    REQUIRE (reverse_complement("UUAACUGGGGUGAACUGUCCUGAGCCUAUGGAUCUGCGCGCAGGGCUUCAAAUGGAGUUCGGAAUGACCAUCGAUUCUCGAUGUUUGGCACGAAGUCGCA") == "UGCGACUUCGUGCCAAACAUCGAGAAUCGAUGGUCAUUCCGAACUCCAUUUGAAGCCCUGCGCGCAGAUCCAUAGGCUCAGGACAGUUCACCCCAGUUAA");
}

TEST_CASE ("reversecomplement11", "[11]") {
    REQUIRE (reverse_complement("GCAGCUCCCCGUCCAUCGAUAAGAGACGUUCCUGCCACGGUUGCUCUACUUUAGAGGUACAACUCUCUUGUAUAAGCCUAGCGUCCUUCCGGAGGAGCCGGGUGCCGUCUCAUGGAUCCGCAUUGUCAGGUUGGCCACGACCAUUCAAAAUUUAACUUACACUUAUGAUGCGAAAUGCACACCAUAGUGCCACCGUGAUAAGUUUCCAGCCGAACUAUGCGAGUUUGCGAGAGGCAGGCUCAAUGCCAGCAGGGGCCAGUGAGGGCUCGAUCUAAAACCCGCUGUUGAUAUUCGUAAACGGUGGCCCGCCUGUUCAGUUACUCUCCAUAUCAUCACCUCAGGUUGAGCCAAAGUAGCCGCGCCGCAUCAAGCUGAGAGAAGUGCACGAGGUUUACACGUAGCCCUCUCUGAUCCGGUUGCCGUGCACUAGCGAUUUGUUUCACAUGAAUCGGUCGGGAGUACACACACAUAUAUUAUUAGAGUUGUUCAAUCCCGCAGAG") == "CUCUGCGGGAUUGAACAACUCUAAUAAUAUAUGUGUGUGUACUCCCGACCGAUUCAUGUGAAACAAAUCGCUAGUGCACGGCAACCGGAUCAGAGAGGGCUACGUGUAAACCUCGUGCACUUCUCUCAGCUUGAUGCGGCGCGGCUACUUUGGCUCAACCUGAGGUGAUGAUAUGGAGAGUAACUGAACAGGCGGGCCACCGUUUACGAAUAUCAACAGCGGGUUUUAGAUCGAGCCCUCACUGGCCCCUGCUGGCAUUGAGCCUGCCUCUCGCAAACUCGCAUAGUUCGGCUGGAAACUUAUCACGGUGGCACUAUGGUGUGCAUUUCGCAUCAUAAGUGUAAGUUAAAUUUUGAAUGGUCGUGGCCAACCUGACAAUGCGGAUCCAUGAGACGGCACCCGGCUCCUCCGGAAGGACGCUAGGCUUAUACAAGAGAGUUGUACCUCUAAAGUAGAGCAACCGUGGCAGGAACGUCUCUUAUCGAUGGACGGGGAGCUGC");
}


int main (int argc, char* argv[]) {
  return Catch::Session().run(argc, argv);
}
